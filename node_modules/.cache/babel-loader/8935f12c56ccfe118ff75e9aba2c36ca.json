{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useReducer, useEffect } from \"react\";\nimport { database } from './../../firebase';\nimport { useAuth } from './../store/AuthStore';\nconst ACTIONS = {\n  SELECT_FOLDER: \"select-folder\",\n  UPDATE_FOLDER: \"update-folder\",\n  SET_CHILD_FOLDERS: \"set-child-folders\",\n  SET_CHILD_FILES: \"set-child-files\"\n};\nexport const ROOT_FOLDER = {\n  name: \"Home\",\n  id: null,\n  path: []\n};\n\nconst reducer = (state, _ref) => {\n  let {\n    type,\n    payload\n  } = _ref;\n\n  switch (type) {\n    case ACTIONS.SELECT_FOLDER:\n      return {\n        folderId: payload.folderId,\n        folder: payload.folder,\n        childFiles: [],\n        childFolders: []\n      };\n\n    case ACTIONS.UPDATE_FOLDER:\n      return { ...state,\n        folder: payload.folder\n      };\n\n    case ACTIONS.SET_CHILD_FOLDERS:\n      return { ...state,\n        childFolders: payload.childFolders\n      };\n\n    case ACTIONS.SET_CHILD_FILES:\n      return { ...state,\n        childFiles: payload.childFiles\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const useFolder = function () {\n  _s();\n\n  let folderId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  let folder = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  const {\n    currentUser\n  } = useAuth();\n  const [state, dispatch] = useReducer(reducer, {\n    folderId,\n    folder,\n    childFolders: [],\n    childFiles: []\n  });\n  useEffect(() => {\n    dispatch({\n      type: ACTIONS.SELECT_FOLDER,\n      payload: {\n        folderId,\n        folder\n      }\n    });\n  }, [folderId, folder]);\n  useEffect(() => {\n    if (!folderId) {\n      return dispatch({\n        type: ACTIONS.UPDATE_FOLDER,\n        payload: {\n          folder: ROOT_FOLDER\n        }\n      });\n    }\n\n    database.folders.doc(folderId).get().then(doc => {\n      dispatch({\n        type: ACTIONS.UPDATE_FOLDER,\n        payload: {\n          folder: database.formatDoc(doc)\n        }\n      });\n    }).catch(() => {\n      dispatch({\n        type: ACTIONS.UPDATE_FOLDER,\n        payload: {\n          folder: ROOT_FOLDER\n        }\n      });\n    });\n  }, [folderId]);\n  useEffect(() => {\n    return database.folders.where(\"parentId\", \"==\", folderId).where(\"userId\", \"==\", currentUser.uid).orderBy(\"createdAt\").onSnapshot(snapshot => {\n      dispatch({\n        type: ACTIONS.SET_CHILD_FOLDERS,\n        payload: {\n          childFolders: snapshot.docs.map(database.formatDoc)\n        }\n      });\n    });\n  }, [folderId, currentUser]);\n  useEffect(() => {\n    return database.files.where(\"folderId\", \"==\", folderId).where(\"userId\", \"==\", currentUser.uid).onSnapshot(snapshot => {\n      dispatch({\n        type: ACTIONS.SET_CHILD_FILES,\n        payload: {\n          childFiles: snapshot.docs.map(database.formatDoc)\n        }\n      });\n    });\n  }, [folderId, currentUser]);\n  return state;\n};\n\n_s(useFolder, \"03SAlQchzYwoD5Pm+usPA4TwODg=\", false, function () {\n  return [useAuth];\n});","map":{"version":3,"names":["useReducer","useEffect","database","useAuth","ACTIONS","SELECT_FOLDER","UPDATE_FOLDER","SET_CHILD_FOLDERS","SET_CHILD_FILES","ROOT_FOLDER","name","id","path","reducer","state","type","payload","folderId","folder","childFiles","childFolders","useFolder","currentUser","dispatch","folders","doc","get","then","formatDoc","catch","where","uid","orderBy","onSnapshot","snapshot","docs","map","files"],"sources":["/Users/student/Desktop/My_dropbox-master/src/components/hooks/useFolder.js"],"sourcesContent":["import { useReducer, useEffect } from \"react\"\nimport { database } from './../../firebase';\nimport { useAuth } from './../store/AuthStore';\n\nconst ACTIONS = {\n    SELECT_FOLDER: \"select-folder\",\n    UPDATE_FOLDER: \"update-folder\",\n    SET_CHILD_FOLDERS: \"set-child-folders\",\n    SET_CHILD_FILES: \"set-child-files\"\n}\n\nexport const ROOT_FOLDER = {\n    name: \"Home\",\n    id: null,\n    path: []\n}\n\nconst reducer = (state, { type, payload }) => {\n    switch (type) {\n        case ACTIONS.SELECT_FOLDER:\n            return {\n                folderId: payload.folderId,\n                folder: payload.folder,\n                childFiles: [],\n                childFolders: []\n            }\n        case ACTIONS.UPDATE_FOLDER:\n            return {\n                ...state,\n                folder: payload.folder\n            }\n        case ACTIONS.SET_CHILD_FOLDERS:\n            return {\n                ...state,\n                childFolders: payload.childFolders\n            }\n        case ACTIONS.SET_CHILD_FILES:\n            return {\n                ...state,\n                childFiles: payload.childFiles\n            }\n        default:\n            return state;\n    }\n}\n\nexport const useFolder = (folderId = null, folder = null) => {\n    const { currentUser } = useAuth();\n    const [state, dispatch] = useReducer(reducer, {\n        folderId,\n        folder,\n        childFolders: [],\n        childFiles: []\n    });\n\n    useEffect(() => {\n        dispatch({ type: ACTIONS.SELECT_FOLDER, payload: { folderId, folder } })\n    }, [folderId, folder])\n\n    useEffect(() => {\n        if(!folderId) {\n            return dispatch({\n                type: ACTIONS.UPDATE_FOLDER,\n                payload: { folder: ROOT_FOLDER, }\n            })\n        }\n\n        database.folders.doc(folderId).get().then(doc => {\n            dispatch({\n                type: ACTIONS.UPDATE_FOLDER,\n                payload: { folder: database.formatDoc(doc), }\n            })\n        }).catch(() => {\n            dispatch({\n                type: ACTIONS.UPDATE_FOLDER,\n                payload: { folder: ROOT_FOLDER, }\n            })\n        })\n    }, [folderId])\n\n    useEffect(() => {\n        return database.folders\n            .where(\"parentId\", \"==\", folderId)\n            .where(\"userId\", \"==\", currentUser.uid)\n            .orderBy(\"createdAt\")\n            .onSnapshot(snapshot => {\n                dispatch({\n                    type: ACTIONS.SET_CHILD_FOLDERS,\n                    payload: { childFolders: snapshot.docs.map(database.formatDoc) }\n                })\n            })\n\n    }, [folderId, currentUser])\n\n    useEffect(() => {\n        return database.files\n            .where(\"folderId\", \"==\", folderId)\n            .where(\"userId\", \"==\", currentUser.uid)\n            .onSnapshot(snapshot => {\n                dispatch({\n                    type: ACTIONS.SET_CHILD_FILES,\n                    payload: { childFiles: snapshot.docs.map(database.formatDoc) }\n                })\n            })\n\n    }, [folderId, currentUser])\n\n    return state;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}